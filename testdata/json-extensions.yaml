#
# Gabbi has extensions to JSONPath, as `len`. Gobbi uses len()
# due to the json path library, which appears to be more standard.
# Thus we need to test it.
#

tests:

    - name: test len
      url: /foobar
      method: POST
      request_headers:
          content-type: application/json
      data:
          alpha:
              - one
              - two
          beta: hello
      response_json_paths:
          # the dict has two keys
          $.len(): 2
          $.alpha[0]: one
          $.alpha[1]: two
          # the list at alpha has two items
          $.alpha.len(): 2
          $.beta: hello
          # the string at beta has five chars
          $.beta.len(): 5

    - name: test sort
      skip: json path sort not yet supported
      url: /barfoo
      method: POST
      request_headers:
          content-type: application/json
      data:
          objects:
              - name: cow
                value: moo
              - name: cat
                value: meow
      response_json_paths:
          $.objects[/name][0].value: meow
          $.objects[/name][1].value: moo
          $.objects[\name][1].value: meow
          $.objects[\name][0].value: moo
          $.objects[/name]..value: ['meow', 'moo']

    - name: test filtered
      url: /barfoo
      method: POST
      request_headers:
          content-type: application/json
      data:
          objects:
              - name: cow
                value: moo
              - name: cat
                value: meow
      response_json_paths:
          # This format is not the same as gabbi, where filter syntax is
          # does not follow the spec.
          $.objects[?(@.name == "cow")].value: moo
          $.objects[?(@.name == "cat")].value: meow
          $.objects[?(@.value == "meow")].name: cat
