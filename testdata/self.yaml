#
# Tests for testing gabbi, using the built in SimpleWsgi app.
#

defaults:
    skip: not yet implemented
    url: /cow?alpha=1
    request_headers:
        x-random-header: ya

tests:
- name: get simple page
  skip: ""
  url: /
  verbose: True

- name: inheritance of defaults
  skip: ""
  response_headers:
      x-gabbi-url: $SCHEME://$NETLOC/cow?alpha=1
  response_strings:
      - '"alpha":["1"]'
  response_json_paths:
      alpha[0]: "1"

- name: bogus method
  skip: ""
  url: /
  method: UNREAL
  status: 405
  response_headers:
      allow: GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS
      x-gabbi-method: UNREAL
      x-gabbi-url: $SCHEME://$NETLOC/

- name: query returned
  skip: ""
  url: /somewhere?foo=1&bar=2&bar=3
  response_strings:
      - "\"bar\":[\"2\",\"3\"]"
  response_json_paths:
      bar:
          - "2"
          - "3"

- name: simple post
  skip: ""
  url: /named/thing
  method: POST
  response_headers:
      location: $SCHEME://$NETLOC/named/thing

- name: use prior location
  skip: ""
  url: $LOCATION
  response_headers:
      x-gabbi-url: $SCHEME://$NETLOC/named/thing

- name: use a historical location
  skip: ""
  url: $HISTORY['simple post'].$LOCATION
  response_headers:
      x-gabbi-url: $SCHEME://$NETLOC/named/thing

- name: checklimit
  skip: ""
  url: /

- name: post a body
  skip: ""
  url: /somewhere
  method: POST
  data:
      cow: barn
  request_headers:
      content-type: application/json
  response_json_paths:
      $.cow: barn
  response_headers:
      location: $SCHEME://$NETLOC/somewhere

- name: get location from headers
  skip: ""
  url: $HEADERS['locaTion']
  response_headers:
      x-gabbi-url: $SCHEME://$NETLOC/somewhere

- name: get historical location from headers
  skip: ""
  url: $HISTORY['post a body'].$HEADERS['locaTion']
  response_headers:
      x-gabbi-url: $SCHEME://$NETLOC/somewhere

- name: post a body with query
  skip: ""
  url: /somewhere?chicken=coop
  method: POST
  data:
      cow: barn
  request_headers:
      content-type: application/json
  response_json_paths:
      $.cow: barn
      $.chicken[0]: coop

- name: test binary handling
  skip: ""
  url: /
  request_headers:
      accept: image/png
  response_headers:
      content-type: image/png

- name: confirm environ
  url: /$ENVIRON['GABBI_TEST_URL']
  response_headers:
      x-gabbi-url: $SCHEME://$NETLOC/takingnames

- name: confirm environ no key fail
  desc: this confirms that no key leads to failure rather than error
  xfail: true
  url: /$ENVIRON['1385F1EB-DC5C-4A95-8928-58673FB272DC']

- name: test exception wrapper
  desc: simple wsgi will raise exception
  url: /
  xfail: true
  method: DIE

- name: non json response failure
  desc: asking for json in a non json test should be failure not error
  url: /
  xfail: true
  method: GET
  request_headers:
      accept: text/plain
  response_json_paths:
      $.data: hello

- name: json derived content type
  desc: +json types should work for json paths
  url: /?data=hello
  method: GET
  request_headers:
      accept: application/vnd.complex+json
  response_json_paths:
      $.data[0]: hello

- name: xml derived content type
  desc: +xml types should not work for json paths
  xfail: true
  url: /?data=hello
  method: GET
  request_headers:
      accept: application/vnd.complex+xml
  response_json_paths:
      $.data[0]: hello
